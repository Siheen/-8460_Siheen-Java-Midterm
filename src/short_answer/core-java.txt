***ANSWER ALL THE QUESTIONS BELOW***

What is a programming language?
Answer: A programming language is a computer language that is used by programmers to communicate with computers.
        It is a set of instructions written in any specific language (Java, Python)  that tells computers what to do
        to perform specific tasks.

What is a JDK composed of? Define each component?
Answer: The Java Development Kit, contains JRE (Java Runtime Environment) and several development tools,
        mainly interpreter/loader (java), a compiler (javac), an archiver (jar), a documentation generator.
        ~ The JRE software builds a runtime environment in which Java programs can be executed.
          The JRE is the on-disk system that takes your Java code, combines it with the needed libraries, and starts the JVM
         to execute it. The JRE contains libraries and software needed by your Java programs to run.
        ~ The archiver used is jar and the documentation used for is javadoc.
        ~ The javac is a compiler in which it converts source code to bytecode, which is machine-readable.
        ~ The interpreter basically interprets the language in which the computer will understand and run the tasks.



What is an IDE?
Answer: Integrated Development Environment. It can write code, debu

What are some of the most popular Java IDEs available in the market?
Answer: IntelliJ, Eclipse and Netbeans

Explain the entire java life cycle.
Answer:  How I understand is with this flow,

 code/text editor ---> Source class files-------->Java Compiler ---> .class converts to byteCode which is machine-readable--->
 (aka IDE               (it's the class,any class
writing our               will have .java)
code here)
             class loader----> bytecode verifier--->interpreter
                              (runtime exception)
             JVM(part of JRE, physically doesn't exist, it provides runtime env't to drive the java code or application)
                            -----> shows up in the host machine.



What is a class?
Answer: A class is blueprint to create an object. It consists of variables and methods(aks Instance members).
        ~ class has its own behavior and state/attributes.

What is an object?
Answer: Object is an instance of a class. Instance, or when we mean create of an instance, it means create an object.

What is the entry point of a Java project?
Answer: the main method.

Why is the main() method static?
Answer:  because we need a fixed place in memory for java to say this is out entry point for the program.

Which class is the superclass of all classes?
Answer: java.lang.object / the object class

What is difference between path and classpath variables?
Answer: path looks for executable files whereas, classpath loads and locates .class-files.

What is the difference between an Interface and Abstract class?
Answer: An Interface is 100% abstract, but  Abstract class may or may not contain abstract methods, however, if there is
        an abstract method within a class, then the class MUST be abstract.


Can you make an Object from an Interface and Abstract class? If yes or no, how would you do it?
Answer: We can't because they don't or can't have constructors.
        While we can't instantiate an abstract class, we can use the abstract class to define the data type of the reference
        and instantiate a child of the abstract class.

What is Access Modifier?
Answer: specifies the accessibility/scope of a field, method, constructor or class.
        public ---- the scope is global
        protected-- the scope is limited to that package.

What is OOP? Define each OOP concept.
Answer: Object-Oriented programming (OOP) refers to languages that uses objects in programming. It relies on the concept
        of classes and objects.It is used to structure a software program into simple, reusable pieces of code blueprints
        (classes), which are used to create individual instances of objects.
                    *** ~ Abstraction, Inheritance, Encapsulation & Polymorphism.
    Abstraction~ abstraction is the process of hiding certain details and showing only essential information to the user.
                 Abstraction is hiding method implementation. You create an abstract method by using the keyboard abstract,
                 but you do not implement the body. The way you implement the body is by using a child class.
                 Abstract method is meant to be overridden by child class.
    Encapsulation~ is data hiding, when we don't want to allow the user/other people to change the state/variable of class.
                 in other words, its data hiding and protecting a variable from assigning inappropriate value.The value of the variable
                 can be accessed through the method of the current class. getters and setters methods are used to
                 implement encapsulation.

     Inheritance ~ "Is A"- relationship
                 ~ is where one class acquires the property of another class, this helps to reuse the code and establish
                  a relationship between different classes.
                 ~ extending states/behaviours to other classes
     Polymorphism ~ is the ability to have multiple methods with the same name, same functionality  but acting on different objects
                    or variables.( 2-types of polymorphism is method overloading (compile time which is also static)
                    & method overriding (run time- which is dynamic)
What is Java Package and which package is imported by default?
Answer: Java package in Java is used to group related classes. As a folder in a file directory, or think of it as in like
        the bedroom dresser with drawers example mentioned in class.
        ~ by default java.lang is imported
What is an API? List some API's that you have used so far.
Answer: API application Programming Interface, is a set of functions that allows applications to access data and interact
        with external software components, operating systems, or microservices.
        API delivers a user response to a system and sends the system’s response back to a user. You click “add to cart;”
        an API tells the site you added a product to your cart; the website puts the product in your cart,
        and your cart is updated.
      Types ~ Open APIs, Partner APIs, Internal APIs, Composite APIs
      Used on a daily basis are like weather, sports, food & restaurants, travel, payment and so on


Does java support multiple inheritance? Why or why not?
Answer: -You can only inherit FROM one class, but you can inherit TO any number of classes. It means you can’t extend more than
        one class. As in, the car-vehicle example, car can only extend to  vehicle while vehicle can inherit to d/t number of
        classes. Java doesn't support multiple inheritance just for the mere reason of avoiding ambiguity
        The reason behind this is to prevent ambiguity. Consider a case one class extends to two different classes and both class
        have the same method display(). The java compiler cannot decide, which display method it should inherit.


What is method overloading? List all the different ways to overload.
Answer: the only way you can differentiate method overlapping are
        1. Number of parameters
        2. types of parameters
        3. order of parameters

Explain exceptions in java and how to handle them.
Answer:

What is static keyword? When and how do we use it?
Answer: static means "fixed"
        ~ when we declare a variable or a method static, that means there is a fixed place in memory.
        ~ the particular member belongs to a type itself rather than to an instance of that type.
What is final keyword? When and how do we use it?
Answer: Using final keyword, makes the attribute, method or class a constant. When you make something
        final the name convention changes.

Explain the difference between final, finally and finalize?
Answer: final~ is the keyword and access modifier which is used to apply restrictions on a class, method or variable.
               is used with the classes, methods and variables.
               is executed only when we call it.
        finally~ finally block is always related to the try and catch block in exception handling.
               ~ runs the important code even if exception occurs or &  cleans up all the resources used in try block
               ~ is executed as soon as the try-catch block is executed.
                 Its execution is not dependent on the exception.
        finalize~ is the method in Java which is used to perform clean up processing just before object is garbage collected.
                ~ is executed just before the object is destroyed.
What is a constructor?
Answer: Constructors are implicitly defined  in every class, by default. They are used when creating instance
        (Objet) ogf a class.

Can we have multiple constructors in a class?
Answer: Yes

If we don't have a constructor declared, what is called during the object creation?
Answer: the default constructor, it is the constructor that accepts NO parameters.

What is "this" keyword in Java? When would we use it?
Answer: this. keyword refers to the current object in method or constructor.
        use of the this keyword is to eliminate the confusion between class attributes and parameters
        with the same name (because a class attribute is shadowed by a method or constructor parameter).

What is "super" keyword in Java? What are some scenarios we would use it?
Answer: super key word refers to the parent method & used to call the parent constructor.

What does JVM stand for?
Answer: Java Virtual Machine

Is JVM platform independent?
Answer: No, it is platform-dependent. Different JVM is designed for different OS and byte code is able to run on different

What version of Java are you using?
Answer:
        C:\Users\sihee> java --version
        java 11.0.14 2022-01-18 LTS
        Java(TM) SE Runtime Environment 18.9 (build 11.0.14+8-LTS-263)
        Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.14+8-LTS-263, mixed mode)


What does JAR stand for?
Answer:  Java ARchive. It's a file format based on the popular ZIP file format and is used for aggregating many files into one.

What is the difference between JDK and JVM?
Answer: Java Development Kit ~ consists of tools to run java, contains the libraries as well.
        Java virtual Machine is part of the JRE, which provide the runtime environment to drive the java code/application.
What is the difference between JVM and JRE?
Answer: JVM is part of JRE,JRE is an environment, in order to execute any Java program locally.
        JVM is where it's responsible for converting the Bytecode into machine specific code and makes
        java program write-once-run-anywhere.


Explain the difference between compile-time and run-time?
Answer: compile-time ~ at the time of writing the code.
        run-time  ~ when there is an error running it

What is heap?
Answer: The heap is a memory used by programming languages to store global variables

How does Java manage its memory?
Answer: ava manages the memory for use. New objects created and placed in the heap. Once your application have no reference
        anymore to an object the Java garbage collector is allowed to delete this object and remove the memory
        so that your application can use this memory again.

What is the difference between String, StringBuffer and StringBuilder?
Answer:

What is Singleton class?
Answer:

What is Serialization and Deserialization?
Answer:

Explain the difference between While and Do..While loops?
Answer:-while loop means, while a condition is true, ONLY when the condition is true continue looping,
        if it is false, then it won’t execute at all.
       -Do-While loop, executes the loop first, ALWAYS, and then check the condition to see if it should continue looping,
        at least it will loop one time


What is Enum?
Answer: aka-Enumeration. It is a list of constants. Enums enables for a variable to be set of predefined constant.
           like NORTH, SOUTH, WEST, EAST
What is Iterator?
Answer:

Which one will take more memory: an int or Integer? Why?
Answer:

Why are Strings considered to be immutable in Java?
Answer:

What is constructor chaining in Java?
Answer:

The difference between Serial and Parallel Garbage Collector?
Answer:

What does JIT stands for?
Answer:

Explain the process of Java garbage collection?
Answer:

Can you guarantee the garbage collection process?
Answer:

What is the difference between stack and heap in Java?
Answer:

What is reflection in Java and why is it useful?
Answer:

What is multithreading in Java?
Answer:

What is synchronization in Java?
Answer:

What is a Framework?
Answer:

What are the testing Frameworks available in Java?
Answer:

What are jUnit and testNG?
Answer:

What are the dependencies for this project?
Answer: gson-2.6.2.jar
        testng-6.8.7.jar
        protobuf-java-3.11.4.jar
        jackson-annotations-2.11.3.jar
        javax.json-1.0.jar
        jackson-core-2.11.3.jar
        mysql-connector-java-8.0.28.jar
        mongo-java-driver-3.4.0.jar
        jackson-databind-2.11.3.jar
        java-json.jar

What is dependency injection in Java?
Answer:

Explain what static binding and dynamic binding is?
Answer: static binding~ means that at what time during the process does the memory get allocate.
        Dynamic binding means that non-static members of classes are bond to memory at run time.